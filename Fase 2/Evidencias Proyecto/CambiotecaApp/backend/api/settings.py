"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta
from dotenv import load_dotenv 

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(BASE_DIR / ".env")                                                    #NUEVO



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#ECRET_KEY = 'django-insecure--zawqc+%o1$+e+@9p)no#66ay8tazs@+j@*m6@li8i-0xjpc*+'               #ORIGINAL
SECRET_KEY = os.getenv("SECRET_KEY", "dev-secret")                                        #NUEVO
DEBUG = os.getenv("DEBUG", "True") == "True"                                            #NuEVO

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True                                                                   ORIGINAL

#ALLOWED_HOSTS = []                                                          ORIGINAL
ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "127.0.0.1,localhost").split(",")                       #NUEVO


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    # nuestras apps 
    'core',
    'market',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # ðŸ‘ˆ aÃ±adido
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # WhiteNoise (sirve estÃ¡ticos en producciÃ³n)
    "whitenoise.middleware.WhiteNoiseMiddleware",
]


ROOT_URLCONF = 'api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases



#                             ORIGINAL
'''DATABASES = { 
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DB_NAME', ''),           
        'USER': os.getenv('DB_USER', ''),                  
        'PASSWORD': os.getenv('DB_PASS', ''),         
        'HOST': os.getenv('DB_HOST', ''),             
        'PORT': os.getenv('DB_PORT', '3306'),
        'OPTIONS': {
            'charset': 'utf8mb4',
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    }
}'''


DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": os.getenv("DB_NAME", ""),
        "USER": os.getenv("DB_USER", ""),
        "PASSWORD": os.getenv("DB_PASS", ""),
        "HOST": os.getenv("DB_HOST", ""),
        "PORT": os.getenv("DB_PORT", "3306"),
        "OPTIONS": {
            "charset": "utf8mb4",
            "init_command": "SET sql_mode='STRICT_TRANS_TABLES'",
            # Si tu RDS exige SSL, descomenta cuando descargues el bundle de AWS:
            # "ssl": {"ssl_ca": str(BASE_DIR / "certs" / "rds-combined-ca-bundle.pem")},

        },
         "CONN_MAX_AGE": 60,
    }
}




# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

# Static: carpeta /static para CSS/imagenes
STATIC_URL = "static/"
STATICFILES_DIRS = [BASE_DIR / "static"]



# settings.py
#BASE_DIR = os.path.dirname(os.path.dirname(__file__))                         ORIGINAL
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = "/media/"



# Permitir llamadas desde Ionic (dev)
CORS_ALLOWED_ORIGINS = [
    "http://localhost:8100",
    "http://127.0.0.1:8100",
]



REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
}

# SimpleJWT (opcional: ajustar expiraciones)

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=1),
}

# Si usas fetch con credenciales:
CORS_ALLOW_CREDENTIALS = True

# (opcional pero Ãºtil si activas CSRF)
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:8100",
    "http://127.0.0.1:8100",
]



# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



# Email (Mailtrap Sandbox)
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 465
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True
# prueba 587; si falla, 2525; si falla, 25
EMAIL_HOST_USER = ""        # p.ej. 4d1b02e80b8267
EMAIL_HOST_PASSWORD = "".replace(" ", "")   # p.ej. ****abb8
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER  # en sandbox vale cualquiera
FRONTEND_RESET_URL = "http://localhost:8100/auth/reset"




